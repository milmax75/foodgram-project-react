name: Django-app workflow

on: push

jobs:

  build_and_push_to_docker_hub:
      name: Push Docker images to Docker Hub
      runs-on: ubuntu-latest
      needs: tests
      if: github.ref == 'refs/heads/master'
      steps:
        - name: Check out the repo
          uses: actions/checkout@v2 
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1 
        - name: Login to Docker 
          uses: docker/login-action@v1 
          with:
            username: ${{ secrets.DOCKER_USER }} 
            password: ${{ secrets.DOCKER_PSW }} 
        - name: Push BACKEND to Docker Hub
          uses: docker/build-push-action@v2 
          with:
            push: true
            context: ./backend
            tags: milmax/foodgram_back:v.1
        - name: Push FRONTEND to Docker Hub
          uses: docker/build-push-action@v2 
          with:
            push: true
            context: ./frontend
            tags: milmax/foodgram_front:v.1 
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            sudo docker-compose stop
            sudo docker-compose rm backend
            touch .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.DB_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.DB_PSW }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            sudo docker-compose up -d

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} Successfully deployed!             
